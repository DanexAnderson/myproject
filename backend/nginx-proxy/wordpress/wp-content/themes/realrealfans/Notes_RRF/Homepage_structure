Post Data Categories:

Sports:
        1. Football 
        2. Baseketball
        3. American Football
        4. Other Sports

Entertainment:

        1. Music 
        2. Series
        3. Movies 
        4. Anime  




Technology

        1. New releases 
        2. Software downloads
        3. Tech Fix 
        4. Q & A


Change Categories style in class-wp-widget-Categories.php.. 


Wordpress ToDo: 

1) Create live Search update and Add Search icon ^^^^^
2) Add Dynamic Banners                            ^^^^^^
3) Menu hover items bootstrap drown menus with animations ^^^^^
4) image gallery for single page, Popup to skip through images ^^^^^
5) Add Sidebar widget
6) Create Footer, add Social Media links fixed to the Right of each page 
7) Add login/register to Nav
8) Add Redirects for Nav Menu ^^^^^^^^
9) Add Comments: sent email after Comment.
10) Add Likes 


        #Gallery:

happening: 
           1. Media Library: title, author, description and  caption(#postTitle_postID)
           2. Post: Title, Author, content, Excerpt
           3. Request All Images: Football=>Author=>Title == Key(#postTitle_postID)

1) Add unique caption to Media Image 
2) ReCreate caption variable in WP_Query
        Media Library WP_Query:
                'author' => $post->author,
                'caption' => '#'.$post->title.'_'.$post->id

3) Image upload: Save Post then respond with postTitle and PostID to save images and caption variable to Media Library


1) upload form: title, caption as query key, description
2) post to media Api
3) single.php to display content and images.
4) get contents from media api using wp_query

Production:

1) Post to posts Api first and get response
2) Create caption key by getting wp post title, author, postId

ToDo :

        Wp_nonce: to form to prevent unauthorized post
        JWT-Authentication: for all Api request 
        Angular post to wp api using jwt-Authentication


User Gallery:

        1. display if Category is Article
        2. WP_Query Media Library by caption key
        3. if exist: loop display images.
        4. else: WP_Query Gallery title by Posts_ID and display Images
        5. wp_reset_postdata();
        
Update Post Info:

        1. Http post request to Wp posts api
        2. set featured Image and status to 'publish'

Custom Api for Posts plus Gallery: ^^^^^^


Multiple Image Uploads:

        For Article:

        1) Create Template form to loop images using formBuilder.
        2) Add Index number to input field "formControlName" as file+Index 
        3) Add Index number to img ID as prevImage+index 
        4) Add Index to Div container ID as Images+index 
        5) Add delete icon to div container with click event ID = index
        6) Remove inner-HTML of Div container by setting it to empty string 
        7) Remove image from form array => removeAt(index: number): void
        8) Add description and title input field to image Div containerIon-reorder, 
        9) ion-reorder-group, sort reorder index within form array  
        10) Add a content textarea at the end 
        11) Send data to DataService => title: this.form.value.titleArr, content: this.form.value.content
               description: this.form.value.descriptionArr, images: this.form.value.imagesArr, 
        12) Create new FormData: loop thru and Array push description, title and images
                formData.append('file[]', images);
        
        For Tech Solution:

        1) Loop create title, description base on image amount container Div
        2) Add Plus button.
        3) Array push title, description and image to form builder array
        4) create Div container with title, description and image 

        
        
// Get ID for Element that was clicked on.
template: `
    <button (click)="onClick($event)" id="test">Click</button>
  `
})
export class AppComponent {
  onClick(event) {
    var target = event.target || event.srcElement || event.currentTarget;
    var idAttr = target.attributes.id;
    var value = idAttr.nodeValue;
  }
}

Angular Resize Images:

Angular single Page Slug: 
        1. get slug from posts on front page, stored in a data property
        2. On click image set slug variable in DataService.
        3. In Single page Component retrieve slug from DataService.