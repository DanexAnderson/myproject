version: '3.6'
services:

  wordpress:
    image: wordpress:${WORDPRESS_VERSION:-php7.3-fpm}
    container_name: wordpress
    volumes:
      - ./wordpress:/var/www/html    
    environment:
     WORDPRESS_DB_HOST: mysql
     WORDPRESS_DB_NAME: wordpress
     WORDPRESS_TABLE_PREFIX: wp_
     WORDPRESS_DB_USER: root
     WORDPRESS_DB_PASSWORD: password
     WPFPM_WP_REDIS_HOST: redis
     WPFPM_RT_WP_NGINX_HELPER_CACHE_PATH: "/tmp/cache"
     WP_PLUGINS: "nginx-helper redis-cache mailgun my-other-plugin"                                       
    #  - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME:-wordpress}
    #  - WORDPRESS_TABLE_PREFIX=${WORDPRESS_TABLE_PREFIX:-wp_}
    #  - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST:-mysql}
    #  - WORDPRESS_DB_USER=${WORDPRESS_DB_USER:-root}
    #  - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD:-password}
    depends_on:
      - mysql
    restart: always
    networks:
      - back

  mysql:
    image: mariadb:${MARIADB_VERSION:-latest}
    container_name: mysql
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-password}
      - MYSQL_USER=${MYSQL_USER:-root}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-password}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-wordpress}
    restart: always
    networks:
      - back

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - 8083:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: password
    networks:
      - back

  nginx:
    image: nginx:${NGINX_VERSION:-latest}
    container_name: nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ${NGINX_CONF_DIR:-./nginx}:/etc/nginx/conf.d
      - ${NGINX_STATIC_DIR:-./public}:/usr/share/nginx/html  
      - ${NGINX_LOG_DIR:-./logs/nginx}:/var/log/nginx
      - ${WORDPRESS_DATA_DIR:-./wordpress}:/var/www/html
      - ${SSL_CERTS_DIR:-./certs}:/etc/letsencrypt
      - ${SSL_CERTS_DATA_DIR:-./certs-data}:/data/letsencrypt
    depends_on:
      - wordpress
    restart: always
    networks:
      - back

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
    - "6379:6379"
    networks:
      - back

networks:
  back:
volumes:
  db_data:
 
